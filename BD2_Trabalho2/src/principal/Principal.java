package principal;

import dao.ConsultarInformationSchema;
import excecao.BDException;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JInternalFrame;
import modelo.internalframa.Tabelas;
import modelo.lista.ListaTabelaModelo;

public class Principal extends javax.swing.JFrame {
    private List<String> tabelas;
    private String tabela;
    private List<String> bancos;
    private String banco;
    private static List<Tabelas> framesInternas = new ArrayList<>();
    
    public Principal() {
        initComponents();
    }

    public static List<Tabelas> getFramesInternas() {
        return framesInternas;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelConsultas = new javax.swing.JPanel();
        painelBancos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listBancos = new javax.swing.JList();
        painelTabelas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTabelas = new javax.swing.JList();
        painelPrincipal = new javax.swing.JPanel();
        painelCampos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAtributos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Banco");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        painelConsultas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Consultas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        painelBancos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Banco", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        listBancos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listBancosMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(listBancos);

        javax.swing.GroupLayout painelBancosLayout = new javax.swing.GroupLayout(painelBancos);
        painelBancos.setLayout(painelBancosLayout);
        painelBancosLayout.setHorizontalGroup(
            painelBancosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );
        painelBancosLayout.setVerticalGroup(
            painelBancosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        painelTabelas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tabelas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        listTabelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listTabelasMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listTabelas);

        javax.swing.GroupLayout painelTabelasLayout = new javax.swing.GroupLayout(painelTabelas);
        painelTabelas.setLayout(painelTabelasLayout);
        painelTabelasLayout.setHorizontalGroup(
            painelTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        painelTabelasLayout.setVerticalGroup(
            painelTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout painelConsultasLayout = new javax.swing.GroupLayout(painelConsultas);
        painelConsultas.setLayout(painelConsultasLayout);
        painelConsultasLayout.setHorizontalGroup(
            painelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBancos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelTabelas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        painelConsultasLayout.setVerticalGroup(
            painelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConsultasLayout.createSequentialGroup()
                .addComponent(painelBancos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(painelTabelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        painelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        painelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tabelas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        painelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        painelPrincipal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                painelPrincipalComponentMoved(evt);
            }
        });

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
        );

        painelCampos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Atributos", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        tbAtributos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbAtributos);

        javax.swing.GroupLayout painelCamposLayout = new javax.swing.GroupLayout(painelCampos);
        painelCampos.setLayout(painelCamposLayout);
        painelCamposLayout.setHorizontalGroup(
            painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        painelCamposLayout.setVerticalGroup(
            painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        preencherBancos();
    }//GEN-LAST:event_formWindowGainedFocus

    private void listBancosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBancosMouseReleased
        selecionarBanco();
        realizarAcaoBanco(evt);
    }//GEN-LAST:event_listBancosMouseReleased

    private void listTabelasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTabelasMouseReleased
        selecionarTabela();
        realizarAcaoTabela(evt);
    }//GEN-LAST:event_listTabelasMouseReleased

    private void painelPrincipalComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_painelPrincipalComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_painelPrincipalComponentMoved

    private void selecionarBanco() {
        painelPrincipal.removeAll();
        framesInternas.clear();
        int linha = listBancos.getSelectedIndex();
        if (linha >= 0) {
            this.banco = bancos.get(linha);
        }
    }
    
    private void realizarAcaoBanco(MouseEvent evt) {
        if (evt.getButton() == MouseEvent.BUTTON1) { // Botão Esquerdo do Mouse
            preencherTabelas();
        }
    }
    
    private void selecionarTabela() {
        int linha = listTabelas.getSelectedIndex();
        if (linha >= 0) {
            this.tabela = tabelas.get(linha);
        }
    }
    
    private void realizarAcaoTabela(MouseEvent evt) {
        if (evt.getButton() == MouseEvent.BUTTON1) { // Botão Esquerdo do Mouse
            carregarPainel();
        }
    }
    
    private void preencherBancos(){
        ConsultarInformationSchema consulta = new ConsultarInformationSchema();
        try {
            bancos = consulta.bancos();
            ListaTabelaModelo modelo = new ListaTabelaModelo(bancos);
            listBancos.setModel(modelo);
        } catch (BDException ex) {
            System.out.println("Erro: " + ex.getMessage());
        }
    }
    
    private void preencherTabelas(){
        ConsultarInformationSchema consulta = new ConsultarInformationSchema();
        try{
            tabelas = consulta.tabelas(banco);
            ListaTabelaModelo modelo = new ListaTabelaModelo(tabelas);
            listTabelas.setModel(modelo);
        } catch(BDException ex) {
            System.out.println("Erro: " + ex.getMessage());
        }
    }
    
    private void carregarPainel(){
        ConsultarInformationSchema consulta = new ConsultarInformationSchema();
        List<String> atributos;
        try {
            atributos = consulta.tabela(banco, tabela);
            Tabelas frameInterna = new Tabelas(tabela, atributos);
            if (framesInternas.isEmpty()){
                criarFrameInterna(frameInterna);
            } else {
                if (!existeFrame(frameInterna)) {
                    criarFrameInterna(frameInterna);
                }
            }
        } catch (BDException ex) {
            System.out.println("Erro: " + ex.getMessage());
        }
    }
    
    private void criarFrameInterna(Tabelas frame){
        frame.setSize(150, 200);
        frame.setLocation((painelPrincipal.getWidth() - frame.getWidth())/2, (painelPrincipal.getHeight()- frame.getHeight())/2);
        painelPrincipal.add(frame);
        frame.setVisible(true);
        framesInternas.add(frame);
        desenharRelacionamento();
    }
    
    private boolean existeFrame(JInternalFrame frameInterna){
        for (JInternalFrame frame: framesInternas) {
            if (frame.getTitle().equals(frameInterna.getTitle())) {
                return true;
            }
        }
        return false;
    }
    
    //Não implementado
    private void desenharRelacionamento(){
        ConsultarInformationSchema consulta = new ConsultarInformationSchema();
        for (int i = 0; i < framesInternas.size(); i++) {
            for (int j = i + 1; j < framesInternas.size(); j++) {
                List<String> relacionamentos;
                try {
                    relacionamentos = consulta.relacionamento(banco, framesInternas.get(i).getTitle(), framesInternas.get(j).getTitle());
                } catch (BDException ex) {
                    relacionamentos = null;
                    System.out.println("Erro: " + ex.getMessage());
                }
                if (relacionamentos != null) {
                    System.out.println("Teste");
                    int menorDistancia[] = menorDistancia(framesInternas.get(i), framesInternas.get(j));
                    Point posicao1 = framesInternas.get(i).posicao(menorDistancia[0]);
                    Point posicao2 = framesInternas.get(i).posicao(menorDistancia[1]);
                    Point pontoMedio = new Point((posicao1.x + posicao2.x)/2, (posicao1.y + posicao2.y)/2);
                    painelPrincipal.getGraphics().drawLine(posicao1.x, posicao1.y, posicao1.x, pontoMedio.y);
                    painelPrincipal.getGraphics().drawLine(posicao1.x, pontoMedio.y, pontoMedio.x, pontoMedio.y);
                    painelPrincipal.getGraphics().drawLine(posicao2.x, posicao2.y, posicao2.x, pontoMedio.y);
                    painelPrincipal.getGraphics().drawLine(posicao2.x, pontoMedio.y, pontoMedio.x, pontoMedio.y);
                }
            }
        }
        painelPrincipal.revalidate();
    }
    
    //Provavelmente erro esta aqui.
    private int[] menorDistancia(Tabelas frame1, Tabelas frame2){
        int posicoes[] = new int[2];
        int frame1Posicao = 0;
        int frame2Posicao = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                int frame1X = frame1.posicao(frame1Posicao).x;
                int frame1Y = frame1.posicao(frame1Posicao).y;
                int frame2X = frame1.posicao(frame2Posicao).x;
                int frame2Y = frame1.posicao(frame2Posicao).x;
                if (Point.distance(frame1X, frame1Y, frame2X, frame2Y) < Point.distance(frame1.posicao(i).x, frame1.posicao(i).y, frame2.posicao(j).x, frame1.posicao(j).y)) {
                    frame1Posicao = i;
                    frame2Posicao = j;
                }
            }
        }
        posicoes[0] = frame1Posicao;
        posicoes[1] = frame2Posicao;
        return posicoes;
    }
    
    @Override
    public void dispose() {
        super.dispose();
        Login login = new Login();
        login.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listBancos;
    private javax.swing.JList listTabelas;
    private javax.swing.JPanel painelBancos;
    private javax.swing.JPanel painelCampos;
    private javax.swing.JPanel painelConsultas;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JPanel painelTabelas;
    private javax.swing.JTable tbAtributos;
    // End of variables declaration//GEN-END:variables
}
